apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ci-runner-
spec:
  entrypoint: backend-ci
  onExit: notify
  serviceAccountName: argo-workflow
  arguments:
    parameters:
      - name: github_url
      - name: revision
      - name: repo
      - name: image_tag
        value: dev
      - name: slack_channel
        value: ericdev-ci
      - name: endpoint
        value: https://ericargo.dictybase.dev/workflows/argo
      - name: src_path
        value: /src
      - name: arango_pass
        value: vandelay
      - name: db_version
        value: 3.3.19
      - name: unit_test_container_image
        value: cybersiddhu/go-builder
  templates:
  - name: notify
    container:
      image: dictybase/slack-notify
      args: ["-t", $(TOKEN),
            "-c","{{workflow.parameters.slack_channel}}",
            "-e","{{workflow.parameters.endpoint}}",
            "-w", "{{workflow.name}}",
            "-s","{{workflow.status}}",
            "--log-level","info"
      ]
      env:
      - name: TOKEN
        valueFrom:
          secretKeyRef:
            name: slack-secret
            key: oauth-token

  - name: backend-ci
    steps: # <--- ci pipeline steps
      - - name: database # arangodb server
          template: arangodb
      - - name: unit-test # unit test, stops here on error or failure
          template: unit-test
          continueOn:
          # stops if error/failed
            error: false
            failed: false
          arguments:
            parameters:
              - name: ahost
                value: "{{steps.database.ip}}"
      - - name: build-push # image build and push
          template: build-push

  # template definitons that are referenced in steps
  ## starts up arangodb server for unit testing
  - name: arangodb
    daemon: true
    container:
      image: "arangodb:{{workflow.parameters.db_version}}"
      env:
        - name: ARANGO_ROOT_PASSWORD
          value: "{{workflow.parameters.arango_pass}}"
      #readinessProbe:
        #httpGet:
          #path: /_admin/status
          #port: 8529
        #initialDelaySeconds: 4
        #periodSeconds: 10

  ## runs unit tests from the checked out github repository
  - name: unit-test
    inputs:
      parameters:
        - name: ahost
      artifacts:
      - name: source
        path: "{{workflow.parameters.src_path}}"
        git:
          repo: "{{workflow.parameters.github_url}}"
          revision: "{{workflow.parameters.revision}}"
    container:
      image: "{{workflow.parameters.unit_test_container_image}}"
      workingDir: "{{workflow.parameters.src_path}}"
      env:
        - name: ARANGO_PASS
          value: "{{workflow.parameters.arango_pass}}"
        - name: ARANGO_HOST
          value: "{{inputs.parameters.ahost}}"

  ## build in cluster docker image and pushes to docker hub
  - name: build-push
    inputs:
      artifacts:
      - name: source
        path: "{{workflow.parameters.src_path}}"
        git:
          repo: "{{workflow.parameters.github_url}}"
          revision: "{{workflow.parameters.revision}}"
    container:
      image: gcr.io/kaniko-project/executor:latest
      args: ["--dockerfile=build/package/Dockerfile",
            "--context={{workflow.parameters.src_path}}",
            "--destination=dictybase/{{workflow.parameters.repo}}:{{workflow.parameters.image_tag}}",
            "--cache=true",
            "--cache-repo=dictybase/{{workflow.parameters.repo}}-cache"
            ]
      volumeMounts:
        - name: docker-secret
          mountPath: /.docker
          readOnly: true
  volumes:
    - name: docker-secret
      secret:
        secretName: docker-secret

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ci-runner-
spec:
  entrypoint: frontend-ci
  onExit: notify
  arguments:
    parameters:
      - name: repo
      - name: revision
        value: develop
      - name: src_path
        value: /src
      - name: slack_channel
        value: ericdev-ci
      - name: endpoint
        value: https://ericargo.dictybase.dev/workflows/argo
      - name: unit_test_container_image
        value: dictybase/node-build
  templates:
  - name: notify
    container:
      image: dictybase/slack-notify
      args: ["-t", $(TOKEN),
            "-c","{{workflow.parameters.slack_channel}}",
            "-e","{{workflow.parameters.endpoint}}",
            "-w", "{{workflow.name}}",
            "-s","{{workflow.status}}",
            "--log-level","info"
      ]
      env:
      - name: TOKEN
        valueFrom:
          secretKeyRef:
            name: slack-secret
            key: oauth-token

  - name: frontend-ci
    steps:
      - - name: unit-test
          template: unit-test

  ## runs unit tests from the checked out github repository
  - name: unit-test
    inputs:
      artifacts:
      - name: source
        path: "{{workflow.parameters.src_path}}"
        git:
          repo: "{{workflow.parameters.repo}}"
          revision: "{{workflow.parameters.revision}}"
    container:
      image: "{{workflow.parameters.unit_test_container_image}}"
      workingDir: "{{workflow.parameters.src_path}}"
      args: ["cp /opt/clientConfig.js {{workflow.parameters.src_path}}/src/utils/ && npm install-test"]
command: ["/bin/sh", "-c"]
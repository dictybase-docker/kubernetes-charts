apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Release.Name | quote}}
  labels:
    app: {{.Release.Name | quote}}
    heritage: {{.Release.Service | quote}} 
      # This makes it easy to audit chart usage.
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
spec:
  template:
    metadata:
      labels:
        app: {{.Release.Name | quote}}
        group: {{.Values.group | quote}}
        provider: {{.Values.provider | quote}}
        mode: {{.Values.mode | quote}}
  spec:
    containers:
    - name: {{.Release.Name | quote}}
      image: "{{.Values.dockerNamespace}}/{{.Values.ImageName}}:{{.Values.dockerTag}}"
      env: 
    - name: "CHADO_USER"
      valueFrom:
        secretKeyRef:
          name: {{.Values.secretName | quote}}
          key: chadouser
    - name: "CHADO_DB"
      valueFrom:
        secretKeyRef:
          name: {{.Values.secretName | quote}}
          key: chadodb
    - name: "PGPASSWORD"
      valueFrom:
        secretKeyRef:
          name: {{.Values.secretName | quote}}
          key: chadopass
      command: ["/bin/bash", "c"]
      args:
        - "PGPASSWORD=$(PGPASSWORD) pg_restore -j 4 -Fc -O -x -w -U $(CHADO_USER) -h $({{.Values.chado-service || upper}}_SERVICE_HOST) -d $(CHADO_DB) {{.Values.datadir}}/dictychado.dump"
      volumeMounts:
        - name: postgres-restore-storage
          mountPath: {{.Values.datadir | quote}}
    volumes:
      - name: postgres-restore-storage
        persistentVolumeClaim:
          claimName: {{.Values.claim | quote}}
    restartPolicy: {{.Values.policy}}


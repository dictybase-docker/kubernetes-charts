# Default values for argo-pipeline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# namespace in which all will be deployed
namespace: argo

# serviceAccount used for argo-events
# this is automatically created when deploying argo-events
serviceAccount: argo-events-sa

# all config related to gateway deployment
gateway:
  name: github-gateway
  ports:
    servicePort: 12000
    targetPort: 12000
    type: NodePort
  processorPort: 9330
  eventProtocol:
    type: HTTP
    port: 9300

# all config related to event source deployment
eventSource:
  name: github-event-source
  # repository owner
  owner: dictyBase
  # url base used for webhooks
  # hookURL: https://ericargo.dictybase.dev
  apiToken:
    # k8s secret with token
    name: github-access
    # key containing github access token
    key: apiToken
  webHookSecret:
    # k8s secret with webhook secret
    name: github-access
    # key containing github webhook secret
    key: webHookSecret
  # list of events to trigger webhook for
  events:
    - push

# all config related to sensor deployment
sensor:
  backendName: github-sensor-backend
  backendNoTestName: github-sensor-backend-no-test
  frontendName: github-sensor-frontend
  # location of frontend workflow yaml
  frontendWorkflow: https://raw.githubusercontent.com/dictybase-docker/kubernetes-charts/master/manifests/argo-workflow/frontend-unit-test-pipeline.yaml
  # location of backend workflow yaml
  backendWorkflow: https://raw.githubusercontent.com/dictybase-docker/kubernetes-charts/master/manifests/argo-workflow/backend-unit-test-pipeline.yaml
  # location of backend workflow yaml
  backendNoTestWorkflow: https://raw.githubusercontent.com/dictybase-docker/kubernetes-charts/master/manifests/argo-workflow/backend-no-test-pipeline.yaml
  verifyCert: false

# list of github webhooks
# all items need repo name and webhook id
# hooks:
#   - repo: dicty-stock-center
#     id: "121824882" # needs to be in quotes
#   - repo: dicty-frontpage
#     id: "121824883"
#   - repo: modware-stock
#     id: "121824887"
#   - repo: modware-order
#     id: "121824888"
#   - repo: "graphql-server"
#     id: "123456789"

# list of frontend repositories with webhooks
# frontend:
#   - dicty-stock-center
#   - dicty-frontpage
#   - genomepage
#   - dictyaccess
#   - publication

# list of backend repositories with webhooks
# backend:
#   - modware-stock
#   - modware-order
#   - modware-annotation
#   - modware-identity
#   - modware-user
#   - modware-content

# list of backend repositories without unit tests
# backendNoTests:
#   - graphql-server
#   - modware-import

# custom values for argo workflow
workflow:
  # slack channel to send notification
  # slackChannel: ericdev-ci
  # endpoint for argo workflow
  # endpoint: https://ericargo.dictybase.dev/workflows/argo
  srcPath: /src
  arangoPass: vandelay
  dbVersion: 3.3.19
  unitTestContainerImage: dictybase/backend-tester
  frontendSrc: /code
  # frontendTag: ericdev
# resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

#
